напиши бэкэнд для приложения для bookcrossing'а на Flask с Swagger (flasgger), тестами (pytest, pytest-mock, testcontainers) и работой с Postgres через SQLAlchemy

функционал неавторизованного пользователя:
- войти в аккаунт
- зарегистрировать аккаунт

функционал авторизованного пользователя с базовыми правами:
- просмотр всех книг с пагинацией (сделай через limit и offset в query) и фильтрами
- просмотр своих кнги - книг, которые он выложил для обмена
- добавление своей книги
- изменение свое книги (если её ещё не взяли)
- удалить свои книгу (если её не взяли)
- возможность взять книгу (свои нельзя, чужую можно)
- просмотреть книги, которые пользователь взял
- выход из аккаунта

функционал админа:
- то же, что и у юзера, но: может удалять любую книгу, не только свою; может удалять юзера (вместе с книгами); может менять роль юзеру (обычный юзер и админ); может просматривать профилиь пользователей со всей доступной информацией
- в админской панели просматривать статистику (кол-во книг, самая популярная, кол-во обменов, кол-во новых книг за день)

модели:

user(id pk, username string 255, hashed_password string 255, role char enum)
book(id pk, owner_id user_id, title string 255, description string 255 | null, author string 255, publish_year int, genre string 255, meeting_address string 255, taken_by user_id | null, created_at datetime, updated_at datetime)

пиши код с аннотациями. пиши комментарии, но не части, пиши docstring'и

для запуска напиши Dockerfile
